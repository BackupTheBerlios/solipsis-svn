# -*- coding: ISO-8859-1 -*-
# generated by wxGlade 0.3.5.1 on Tue Mar 22 11:28:12 2005

import os, os.path
import wx, wx.gizmos
from os.path import isfile
from solipsis.services.profile.facade import get_facade

# begin wxGlade: dependencies
# end wxGlade

class FilePanel(wx.Panel):
    def __init__(self, *args, **kwds):
        # begin wxGlade: FilePanel.__init__
        kwds["style"] = wx.TAB_TRAVERSAL
        wx.Panel.__init__(self, *args, **kwds)
        self.actions_sizer_staticbox = wx.StaticBox(self, -1, _("Actions"))
        self.browse_button = wx.BitmapButton(self, -1, wx.Bitmap("/home/emb/svn/solipsis/trunk/main/solipsis/services/profile/images/browse.jpeg", wx.BITMAP_TYPE_ANY))
        self.add_button = wx.BitmapButton(self, -1, wx.Bitmap("/home/emb/svn/solipsis/trunk/main/solipsis/services/profile/images/add_file.jpeg", wx.BITMAP_TYPE_ANY))
        self.del_button = wx.BitmapButton(self, -1, wx.Bitmap("/home/emb/svn/solipsis/trunk/main/solipsis/services/profile/images/del_file.jpeg", wx.BITMAP_TYPE_ANY))
        self.tag_value = wx.TextCtrl(self, -1, "")
        self.tree_list_ctrl = wx.gizmos.TreeListCtrl(self, -1)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

        isz = (16,16)
        il = wx.ImageList(isz[0], isz[1])
        self.fldridx     = il.Add(wx.ArtProvider_GetBitmap(wx.ART_FOLDER,      wx.ART_OTHER, isz))
        self.fldropenidx = il.Add(wx.ArtProvider_GetBitmap(wx.ART_FILE_OPEN,   wx.ART_OTHER, isz))
        self.fileidx     = il.Add(wx.ArtProvider_GetBitmap(wx.ART_REPORT_VIEW, wx.ART_OTHER, isz))
        self.tree_list_ctrl.SetImageList(il)
        self.il = il
        
        self.tree_list_ctrl.AddColumn(_("Explorer"))
        self.tree_list_ctrl.AddColumn(_("Tags"))
        self.tree_list_ctrl.AddColumn(_("Path"))
        self.tree_list_ctrl.SetMainColumn(0) # the one with the tree in it...
        self.tree_list_ctrl.SetColumnWidth(0, 175)
        self.root = self.tree_list_ctrl.AddRoot(_("File System..."))
        
        self.facade = get_facade()
        self.bind_controls()

    def build_tree(self, root_path):
        # create root
        if self.root:
            self.tree_list_ctrl.DeleteChildren(self.root)
        self.tree_data = {}
        # create first child
        child_dir = self.tree_list_ctrl.AppendItem(self.root, root_path.split(os.path.sep)[-1])
        self.tree_data[root_path] = child_dir
        self.tree_list_ctrl.SetItemImage(child_dir, self.fldridx, which = wx.TreeItemIcon_Normal)
        self.tree_list_ctrl.SetItemImage(child_dir, self.fldropenidx, which = wx.TreeItemIcon_Expanded)
        self.tree_list_ctrl.SetItemText(child_dir, root_path, 2)
        # walk through dirs
        for (dirname, dirnames, names) in os.walk(root_path):
            for dir_name in dirnames:
                self.fill_dir(dir_name, dirname)
            for file_name in names:
                self.fill_file(file_name, dirname)

    def fill_dir(self, dir_name, full_path):
        # get father
        tree_item = self.tree_data[full_path]
        # create child
        child_dir = self.tree_list_ctrl.AppendItem(tree_item, dir_name)
        self.tree_data[os.path.join(full_path, dir_name)] = child_dir
        self.tree_list_ctrl.SetItemImage(child_dir, self.fldridx, which = wx.TreeItemIcon_Normal)
        self.tree_list_ctrl.SetItemImage(child_dir, self.fldropenidx, which = wx.TreeItemIcon_Expanded)
        self.tree_list_ctrl.SetItemText(child_dir, os.path.join(full_path, dir_name), 2)

    def fill_file(self, file_name, full_path):
        # get father
        tree_item = self.tree_data[full_path]
        # create child
        child = self.tree_list_ctrl.AppendItem(tree_item, file_name)
        self.tree_data[os.path.join(full_path, file_name)] = child
        self.tree_list_ctrl.SetItemImage(child, self.fileidx, which = wx.TreeItemIcon_Normal)
        self.tree_list_ctrl.SetItemImage(child, self.fileidx, which = wx.TreeItemIcon_Selected)
        self.tree_list_ctrl.SetItemText(child, os.path.join(full_path, file_name), 2)

        
    # EVENTS
    
    def bind_controls(self):
        """bind all controls with facade"""
        self.browse_button.Bind(wx.EVT_BUTTON, self.on_browse)
        self.add_button.Bind(wx.EVT_BUTTON, self.on_add)
        self.del_button.Bind(wx.EVT_BUTTON, self.on_del)
        self.tag_value.Bind(wx.EVT_KILL_FOCUS, self.on_tag)
        #self.tree_list_ctrl

    def on_browse(self, evt):
        dlg = wx.DirDialog(self, message=_("Choose your repository"),
            style=wx.DD_DEFAULT_STYLE|wx.DD_NEW_DIR_BUTTON)
        
        if dlg.ShowModal() == wx.ID_OK:
            path = dlg.GetPath()
            self.facade.change_repository(path)
            
        dlg.Destroy()
        
    def on_add(self, evt):
        self.tree_list_ctrl.GetSelection()
        
    def on_del(self, evt):
        self.tree_list_ctrl.GetSelection()
        
    def on_tag(self, evt):
        self.tree_list_ctrl.GetSelection()

    
    def __set_properties(self):
        # begin wxGlade: FilePanel.__set_properties
        self.browse_button.SetSize(self.browse_button.GetBestSize())
        self.add_button.SetSize(self.add_button.GetBestSize())
        self.del_button.SetSize(self.del_button.GetBestSize())
        self.tag_value.SetToolTipString(_("Complementary information on file"))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: FilePanel.__do_layout
        file_sizer = wx.BoxSizer(wx.VERTICAL)
        actions_sizer = wx.StaticBoxSizer(self.actions_sizer_staticbox, wx.HORIZONTAL)
        actions_sizer.Add(self.browse_button, 0, wx.FIXED_MINSIZE, 0)
        actions_sizer.Add(self.add_button, 0, wx.FIXED_MINSIZE, 0)
        actions_sizer.Add(self.del_button, 0, wx.FIXED_MINSIZE, 0)
        actions_sizer.Add(self.tag_value, 1, wx.LEFT|wx.EXPAND|wx.FIXED_MINSIZE, 3)
        file_sizer.Add(actions_sizer, 0, wx.ALL|wx.EXPAND, 3)
        file_sizer.Add(self.tree_list_ctrl, 1, wx.ALL|wx.EXPAND, 3)
        self.SetAutoLayout(True)
        self.SetSizer(file_sizer)
        file_sizer.Fit(self)
        file_sizer.SetSizeHints(self)
        # end wxGlade

# end of class FilePanel


