# -*- coding: ISO-8859-1 -*-
# generated by wxGlade 0.4cvs on Mon Jun 20 17:24:56 2005

import wx

from solipsis.util.wxutils import _
from solipsis.services.profile.gui.PreviewPanel import MyHtmlWindow
from solipsis.services.profile.gui.BlogPanel import BlogPanel
from solipsis.services.profile.gui.FilePanel import FilePanel

# begin wxGlade: dependencies
# end wxGlade

class ViewerFrame(wx.Frame):
    def __init__(self, options, parent, id, title, plugin=None, **kwds):
        self.plugin = plugin
        self.options = options
        self.facade = None
        args = (parent, id, title)
        # begin wxGlade: ViewerFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.viewer_book = wx.Notebook(self, -1, style=0)
        self.file_tab = wx.Panel(self.viewer_book, -1)
        self.blog_tab = wx.Panel(self.viewer_book, -1)
        self.view_tab = wx.Panel(self.viewer_book, -1)
        
        # Menu Bar
        self.viewer_menu = wx.MenuBar()
        self.SetMenuBar(self.viewer_menu)
        self.action_item = wx.Menu()
        self.export_item = wx.MenuItem(self.action_item, wx.NewId(), _("&Export HTML ...\tCtrl+E"), _("Write profile as HTML File"), wx.ITEM_NORMAL)
        self.action_item.AppendItem(self.export_item)
        self.action_item.AppendSeparator()
        self.quit_item = wx.MenuItem(self.action_item, wx.NewId(), _("&Close\tCtrl+W"), _("Close profile management"), wx.ITEM_NORMAL)
        self.action_item.AppendItem(self.quit_item)
        self.viewer_menu.Append(self.action_item, _("Action"))
        self.refresh_menu = wx.Menu()
        self.r_all_item = wx.MenuItem(self.refresh_menu, wx.NewId(), _("Refresh All"), "", wx.ITEM_NORMAL)
        self.refresh_menu.AppendItem(self.r_all_item)
        self.refresh_menu.AppendSeparator()
        self.r_profile_item = wx.MenuItem(self.refresh_menu, wx.NewId(), _("Profile\tCtrl+P"), "", wx.ITEM_NORMAL)
        self.refresh_menu.AppendItem(self.r_profile_item)
        self.r_blog_item = wx.MenuItem(self.refresh_menu, wx.NewId(), _("Blog\tCtrl+B"), "", wx.ITEM_NORMAL)
        self.refresh_menu.AppendItem(self.r_blog_item)
        self.r_files_item = wx.MenuItem(self.refresh_menu, wx.NewId(), _("List files\tCtrl+L"), "", wx.ITEM_NORMAL)
        self.refresh_menu.AppendItem(self.r_files_item)
        self.viewer_menu.Append(self.refresh_menu, _("Refresh"))
        self.status_item = wx.Menu()
        self.anonymous_item = wx.MenuItem(self.status_item, wx.NewId(), _("&Anonymous\tCtrl+A"), "", wx.ITEM_RADIO)
        self.status_item.AppendItem(self.anonymous_item)
        self.friend_item = wx.MenuItem(self.status_item, wx.NewId(), _("&Friend\tCtrl+F"), "", wx.ITEM_RADIO)
        self.status_item.AppendItem(self.friend_item)
        self.blacklisted_item = wx.MenuItem(self.status_item, wx.NewId(), _("&Ignore\tCtrl+I"), "", wx.ITEM_RADIO)
        self.status_item.AppendItem(self.blacklisted_item)
        self.viewer_menu.Append(self.status_item, _("Status"))
        self.help_menu = wx.Menu()
        self.about_item = wx.MenuItem(self.help_menu, wx.NewId(), _("About..."), "", wx.ITEM_NORMAL)
        self.help_menu.AppendItem(self.about_item)
        self.viewer_menu.Append(self.help_menu, _("Help"))
        # Menu Bar end
        self.viewer_statusbar = self.CreateStatusBar(1, 0)
        self.html_view = MyHtmlWindow(self.view_tab, -1)
        self.blog_panel = BlogPanel(self.blog_tab, -1)
        self.file_panel = FilePanel(self.file_tab, -1)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def set_facade(self, facade):
        self.facade = facade
        self.html_view.set_facade(self.facade)
        self.blog_panel.set_facade(self.facade)
        self.file_panel.set_facade(self.facade)

    def __set_properties(self):
        # begin wxGlade: ViewerFrame.__set_properties
        self.SetTitle(_("Profile Viewer"))
        self.SetSize((460, 500))
        self.viewer_statusbar.SetStatusWidths([-1])
        # statusbar fields
        viewer_statusbar_fields = [_("status")]
        for i in range(len(viewer_statusbar_fields)):
            self.viewer_statusbar.SetStatusText(viewer_statusbar_fields[i], i)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: ViewerFrame.__do_layout
        viewer_sizer = wx.BoxSizer(wx.VERTICAL)
        file_sizer = wx.BoxSizer(wx.VERTICAL)
        blog_sizer = wx.BoxSizer(wx.VERTICAL)
        view_sizer = wx.BoxSizer(wx.HORIZONTAL)
        view_sizer.Add(self.html_view, 1, wx.EXPAND, 0)
        self.view_tab.SetAutoLayout(True)
        self.view_tab.SetSizer(view_sizer)
        view_sizer.Fit(self.view_tab)
        view_sizer.SetSizeHints(self.view_tab)
        blog_sizer.Add(self.blog_panel, 1, wx.EXPAND, 0)
        self.blog_tab.SetAutoLayout(True)
        self.blog_tab.SetSizer(blog_sizer)
        blog_sizer.Fit(self.blog_tab)
        blog_sizer.SetSizeHints(self.blog_tab)
        file_sizer.Add(self.file_panel, 1, wx.EXPAND, 0)
        self.file_tab.SetAutoLayout(True)
        self.file_tab.SetSizer(file_sizer)
        file_sizer.Fit(self.file_tab)
        file_sizer.SetSizeHints(self.file_tab)
        self.viewer_book.AddPage(self.view_tab, _("View"))
        self.viewer_book.AddPage(self.blog_tab, _("Blog"))
        self.viewer_book.AddPage(self.file_tab, _("Files"))
        viewer_sizer.Add(self.viewer_book, 1, wx.EXPAND, 0)
        self.SetAutoLayout(True)
        self.SetSizer(viewer_sizer)
        self.Layout()
        self.Centre()
        # end wxGlade

# end of class ViewerFrame


