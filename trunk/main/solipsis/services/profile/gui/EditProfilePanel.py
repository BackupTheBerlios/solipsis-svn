# -*- coding: ISO-8859-1 -*-
# generated by wxGlade 0.4 on Tue Oct 25 22:09:15 2005

import wx
import sys
import wx.lib.mixins.listctrl  as  listmix

from solipsis.util.wxutils import _
from solipsis.services.profile.prefs import get_prefs, set_prefs
from solipsis.services.profile.gui import get_all_item_ids, get_new_label, \
     get_selected_item_ids, get_selected_labels
from solipsis.services.profile.filter_facade import get_filter_facade

# begin wxGlade: dependencies
# end wxGlade

class MyListCtrl(wx.ListCtrl, listmix.TextEditMixin):
    
    def __init__(self, parent, ID, pos=wx.DefaultPosition,
                 size=wx.DefaultSize, style=0):
        wx.ListCtrl.__init__(self, parent, ID, pos, size, style)
        listmix.TextEditMixin.__init__(self)

class EditProfilePanel(wx.Panel):
    def __init__(self, frame, *args, **kwds):
        self.frame = frame
        # begin wxGlade: EditProfilePanel.__init__
        kwds["style"] = wx.TAB_TRAVERSAL
        wx.Panel.__init__(self, *args, **kwds)
        self.all_label = wx.StaticText(self, -1, _("Search :"))
        self.all_value = wx.TextCtrl(self, -1, "")
        self.title_label = wx.StaticText(self, -1, _("Title :"))
        self.title_value = wx.ComboBox(self, -1, choices=["", _("Mr"), _("Mrs"), _("Ms")], style=wx.CB_DROPDOWN|wx.CB_SIMPLE|wx.CB_READONLY)
        self.firstname_label = wx.StaticText(self, -1, _("First name :"))
        self.firstname_value = wx.TextCtrl(self, -1, "")
        self.lastname_label = wx.StaticText(self, -1, _("Last name :"))
        self.lastname_value = wx.TextCtrl(self, -1, "")
        self.pseudo_label = wx.StaticText(self, -1, _("Pseudo :"))
        self.pseudo_value = wx.TextCtrl(self, -1, "")
        self.email_label = wx.StaticText(self, -1, _("Email :"))
        self.email_value = wx.TextCtrl(self, -1, "")
        self.customs_label = wx.StaticText(self, -1, _("Customs :"))
        self.customs_list = MyListCtrl(self, -1, style=wx.LC_REPORT|wx.LC_EDIT_LABELS|wx.LC_SORT_ASCENDING|wx.SUNKEN_BORDER)
        self.logic_checkbox = wx.CheckBox(self, -1, _("AND search (default: OR)"))
        self.spacer_label = wx.StaticText(self, -1, "")
        self.mode_button = wx.Button(self, -1, _("Advanced mode"))
        self.clear_button = wx.Button(self, -1, _("Clear"))
        self.apply_button = wx.Button(self, -1, _("Apply"))

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_LIST_ITEM_RIGHT_CLICK, self.on_right_click, self.customs_list)
        self.Bind(wx.EVT_LIST_COL_RIGHT_CLICK, self.on_right_click, self.customs_list)
        self.Bind(wx.EVT_BUTTON, self.on_switch_mode, self.mode_button)
        self.Bind(wx.EVT_BUTTON, self.on_clear, self.clear_button)
        self.Bind(wx.EVT_BUTTON, self.on_apply, self.apply_button)
        # end wxGlade

        # custom list
        self.customs_list.InsertColumn(0, "Name")
        self.customs_list.InsertColumn(1, "Value")
        self.customs_list.SetColumnWidth(0, wx.LIST_AUTOSIZE_USEHEADER)
        self.customs_list.SetColumnWidth(1, wx.LIST_AUTOSIZE_USEHEADER)

        # popup menu
        self.popup_menu = wx.Menu()
        self.new_item = wx.MenuItem(self.popup_menu, wx.NewId(), _("New"))
        self.delete_item = wx.MenuItem(self.popup_menu, wx.NewId(), _("Delete selected(s)"))
        self.popup_menu.AppendItem(self.new_item)
        self.popup_menu.AppendItem(self.delete_item)
        self.Bind(wx.EVT_MENU, self.on_new_custom, self.new_item)
        self.Bind(wx.EVT_MENU, self.on_delete_custom, self.delete_item)

        if not get_prefs("simple_mode"):
            self.on_switch_mode(None)

    def reset(self):
        self.all_value.Clear()
        self.title_value.Clear()
        self.firstname_value.Clear()
        self.lastname_value.Clear()
        self.pseudo_value.Clear()
        self.email_value.Clear()
        self.customs_list.DeleteAllItems()

    def update(self, new_filter):
        self.all_value.SetValue(new_filter.filter_name)
        self.title_value.SetValue(new_filter.title.description)
        self.firstname_value.SetValue(new_filter.firstname.description)
        self.lastname_value.SetValue(new_filter.lastname.description)
        self.pseudo_value.SetValue(new_filter.pseudo.description)
        self.email_value.SetValue(new_filter.email.description)
        self.logic_checkbox.SetValue(not new_filter.filter_or)
        for key, value in new_filter.customs.items():
            index = self.customs_list.InsertStringItem(sys.maxint, key)
            self.customs_list.SetStringItem(index, 1, value.description)

    def __set_properties(self):
        # begin wxGlade: EditProfilePanel.__set_properties
        self.title_label.Hide()
        self.title_value.Hide()
        self.title_value.SetSelection(0)
        self.firstname_label.Hide()
        self.firstname_value.Hide()
        self.lastname_label.Hide()
        self.lastname_value.Hide()
        self.pseudo_label.Hide()
        self.pseudo_value.SetToolTipString(_("How you appear to other peers"))
        self.pseudo_value.Hide()
        self.email_label.Hide()
        self.email_value.Hide()
        self.customs_label.Hide()
        self.customs_list.Hide()
        self.logic_checkbox.Hide()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: EditProfilePanel.__do_layout
        edit_profile_sizer = wx.BoxSizer(wx.VERTICAL)
        title_sizer = wx.BoxSizer(wx.HORIZONTAL)
        edit_profile_sizer.Add(self.all_label, 0, wx.TOP|wx.ADJUST_MINSIZE, 5)
        edit_profile_sizer.Add(self.all_value, 0, wx.EXPAND|wx.ADJUST_MINSIZE, 0)
        title_sizer.Add(self.title_label, 0, wx.ADJUST_MINSIZE, 0)
        title_sizer.Add(self.title_value, 0, wx.FIXED_MINSIZE, 0)
        edit_profile_sizer.Add(title_sizer, 0, wx.TOP|wx.EXPAND, 5)
        edit_profile_sizer.Add(self.firstname_label, 0, wx.TOP|wx.ADJUST_MINSIZE, 5)
        edit_profile_sizer.Add(self.firstname_value, 0, wx.EXPAND|wx.FIXED_MINSIZE, 0)
        edit_profile_sizer.Add(self.lastname_label, 0, wx.TOP|wx.ADJUST_MINSIZE, 5)
        edit_profile_sizer.Add(self.lastname_value, 0, wx.EXPAND|wx.FIXED_MINSIZE, 0)
        edit_profile_sizer.Add(self.pseudo_label, 0, wx.TOP|wx.ADJUST_MINSIZE, 5)
        edit_profile_sizer.Add(self.pseudo_value, 0, wx.EXPAND|wx.FIXED_MINSIZE, 0)
        edit_profile_sizer.Add(self.email_label, 0, wx.TOP|wx.ADJUST_MINSIZE, 5)
        edit_profile_sizer.Add(self.email_value, 0, wx.EXPAND|wx.FIXED_MINSIZE, 0)
        edit_profile_sizer.Add(self.customs_label, 0, wx.TOP|wx.ADJUST_MINSIZE, 5)
        edit_profile_sizer.Add(self.customs_list, 1, wx.EXPAND, 0)
        edit_profile_sizer.Add(self.logic_checkbox, 0, wx.TOP|wx.EXPAND|wx.ADJUST_MINSIZE, 5)
        edit_profile_sizer.Add(self.spacer_label, 1, wx.EXPAND|wx.ADJUST_MINSIZE, 0)
        edit_profile_sizer.Add(self.mode_button, 0, wx.TOP|wx.EXPAND|wx.ADJUST_MINSIZE, 3)
        edit_profile_sizer.Add(self.clear_button, 0, wx.TOP|wx.EXPAND|wx.ADJUST_MINSIZE, 1)
        edit_profile_sizer.Add(self.apply_button, 0, wx.TOP|wx.EXPAND|wx.ADJUST_MINSIZE, 1)
        self.SetAutoLayout(True)
        self.SetSizer(edit_profile_sizer)
        edit_profile_sizer.Fit(self)
        edit_profile_sizer.SetSizeHints(self)
        # end wxGlade

    def on_right_click(self, event): # wxGlade: EditProfilePanel.<event_handler>
        self.PopupMenu(self.popup_menu)
        event.Skip()

    def on_new_custom(self, event):
        new_label =  get_new_label(self.customs_list)
        index = self.customs_list.InsertStringItem(sys.maxint, new_label)
        self.customs_list.SetStringItem(index, 1, "value")
        event.Skip()

    def on_delete_custom(self, event):
        for item_id in  get_selected_item_ids(self.customs_list):
            self.customs_list.DeleteItem(item_id)
        event.Skip()

    def on_clear(self, event): # wxGlade: EditProfilePanel.<event_handler>
        self.reset()
        event.Skip()

    def on_apply(self, event): # wxGlade: EditProfilePanel.<event_handler>
        if self.all_label.IsShown():
            # simple mode
            filter_name = self.all_value.GetValue()
            props = {"title": self.all_value.GetValue(),
                     "firstname": self.all_value.GetValue(),
                     "lastname": self.all_value.GetValue(),
                     "pseudo": self.all_value.GetValue(),
                     "email": self.all_value.GetValue()}
            filter_or = True
            # customs
            customs = {}
        else:
            # advanced mode
            filter_name = self.firstname_value.GetValue()
            props = {"title": self.title_value.GetValue(),
                     "firstname": self.firstname_value.GetValue(),
                     "lastname": self.lastname_value.GetValue(),
                     "pseudo": self.pseudo_value.GetValue(),
                     "email": self.email_value.GetValue()}
            filter_or = not self.logic_checkbox.IsChecked()
            # customs
            customs = {}
            custom_item_ids = get_all_item_ids(self.customs_list)
            for item_id in custom_item_ids:
                key = self.customs_list.GetItem(item_id, 0).GetText()
                value = self.customs_list.GetItem(item_id, 1).GetText()
                customs[key] = value
        # set filter
        get_filter_facade().update_profile_filter(
            filter_name,
            filter_or,
            customs,
            **props)
        self.frame.do_modified(True)
        event.Skip()

    def on_switch_mode(self, event): # wxGlade: EditProfilePanel.<event_handler>
        if self.all_label.IsShown():
            # switching to advanced
            self.mode_button.SetLabel(_("Simple Mode"))
            self.all_label.Hide()
            self.all_value.Hide()
            self.spacer_label.Hide()
            self.title_label.Show()
            self.title_value.Show()
            self.firstname_label.Show()
            self.firstname_value.Show()
            self.lastname_label.Show()
            self.lastname_value.Show()
            self.pseudo_label.Show()
            self.pseudo_value.Show()
            self.email_label.Show()
            self.email_value.Show()
            self.customs_label.Show()
            self.customs_list.Show()
            self.logic_checkbox.Show()
            set_prefs("simple_mode", False)
        else:
            # switching to simple
            self.mode_button.SetLabel(_("Advanced Mode"))
            self.all_label.Show()
            self.all_value.Show()
            self.spacer_label.Show()
            self.title_label.Hide()
            self.title_value.Hide()
            self.firstname_label.Hide()
            self.firstname_value.Hide()
            self.lastname_label.Hide()
            self.lastname_value.Hide()
            self.pseudo_label.Hide()
            self.pseudo_value.Hide()
            self.email_label.Hide()
            self.email_value.Hide()
            self.customs_label.Hide()
            self.customs_list.Hide()
            self.logic_checkbox.Hide()
            set_prefs("simple_mode", True)
        self.GetSizer().Layout()
        if not event is None:
            event.Skip()

# end of class EditProfilePanel


